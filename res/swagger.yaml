openapi: 3.0.0
info:
  title: TaskListTool
  description: Dummy TaskList
  version: 1.0.0
paths:
  '/task/{taskId}':
    get:
      summary: returns the selected task
      description: returns json task object
      parameters:
        - in: path
          name: taskId
          description: ID of task that needs to be fetched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: task found
          content:
            application/json; charset=utf-8:
              schema:
                type: object
      x-amples:
        - name: GetValidTask
          parameters:
            taskId:
              attribute: _id
              use: ref1
          use:
            - uid: ref1
              ressource: /tasks
              example: CreateNewTask
          expectedresponse: 200
        - name: TryToGetInvalidTask
          parameters:
            taskId: 5ad11a4a0401fc39d49aaa7c
          expectedresponse: 200
  /tasks:
    get:
      summary: Get All Tasks
      description: |
        Returns all Task as Json
      tags:
        - Task
      responses:
        '200':
          description: An array of tasks
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The user ID.
                  username:
                    type: string
                    description: The user name.
      x-amples:
        - name: GetAllTasks
          expect:
            value: response.code.value
            toBe: 200
    post:
      summary: Creates new Task
      description: Creates new Task in the Tasklist
      responses:
        '200':
          description: List of Tasks
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Task'
          x-amples:
            - name: CreateNewTask
              parameters:
                body: '{name: ''test''}'
              expectedresponse: 200
            - name: CreateSecondTask
              parameters:
                body: '{name: ''test2''}'
              expectedresponse: 200
            - name: CreateSecondTask
              parameters:
                body:
                  $ref: '#/x-ample-definitions/Tasks/default'
              expectedresponse: 200
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        description: New Object with name
        required: true
  /error:
    get:
      summary: Handling errors
      responses:
        '404':
          description: nothing found here
      x-amples:
        - name: 404Example
          expectedresponse: 404
servers:
  - url: 'https://localhost:3000/'
components:
  schemas:
    Task:
      type: object
      properties:
        product_id:
          type: string
          description: >-
            Unique identifier representing a specific product for a given
            latitude & longitude. For example, uberX in San Francisco will have
            a different product_id than uberX in Los Angeles.
        description:
          type: string
          description: Description of product.
        display_name:
          type: string
          description: Display name of product.
        capacity:
          type: string
          description: 'Capacity of product. For example, 4 people.'
        image:
          type: string
          description: Image URL representing the product.
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        fields:
          type: string

x-ample-definitions:
  Tasks:
    default: &default
      product_id: "test"
      description: "Test"
    newData:
      <<: *default
      product_id: "newTest"



